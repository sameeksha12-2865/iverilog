$date
	Thu Aug 29 14:59:14 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 4 ! o [3:0] $end
$var wire 1 " cout $end
$var reg 1 # cin $end
$var reg 4 $ i0 [3:0] $end
$var reg 4 % i1 [3:0] $end
$var integer 32 & i [31:0] $end
$scope module u0 $end
$var wire 4 ' a [3:0] $end
$var wire 4 ( b [3:0] $end
$var wire 1 # cin $end
$var wire 4 ) sum [3:0] $end
$var wire 1 " cout $end
$var wire 1 * c3 $end
$var wire 1 + c2 $end
$var wire 1 , c1 $end
$scope module fa0 $end
$var wire 1 - a $end
$var wire 1 . b $end
$var wire 1 # cin $end
$var wire 1 , cout $end
$var wire 1 / sum $end
$var wire 5 0 t [4:0] $end
$upscope $end
$scope module fa1 $end
$var wire 1 1 a $end
$var wire 1 2 b $end
$var wire 1 , cin $end
$var wire 1 + cout $end
$var wire 1 3 sum $end
$var wire 5 4 t [4:0] $end
$upscope $end
$scope module fa2 $end
$var wire 1 5 a $end
$var wire 1 6 b $end
$var wire 1 + cin $end
$var wire 1 * cout $end
$var wire 1 7 sum $end
$var wire 5 8 t [4:0] $end
$upscope $end
$scope module fa3 $end
$var wire 1 9 a $end
$var wire 1 : b $end
$var wire 1 * cin $end
$var wire 1 " cout $end
$var wire 1 ; sum $end
$var wire 5 < t [4:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 <
0;
0:
09
b0 8
07
06
05
b0 4
03
02
01
b0 0
0/
0.
0-
0,
0+
0*
b0 )
b0 (
b0 '
b0 &
b0 %
b0 $
0#
0"
b0 !
$end
#10
b1 &
#20
b1 !
b1 )
1/
b10 &
1#
#30
13
1,
b10010 0
1-
1.
b10 !
b10 )
0/
b11 &
b1 $
b1 '
b1 %
b1 (
0#
#40
b11 !
b11 )
1/
b11110 0
b100 &
1#
#50
03
0,
17
1+
b10010 4
0-
11
0.
12
b100 !
b100 )
0/
b0 0
b101 &
b10 $
b10 '
b10 %
b10 (
0#
#60
b101 !
b101 )
1/
b110 &
1#
#70
1"
b1 0
b10010 <
19
1.
1:
b101 !
b101 )
1/
b111 &
b1010 $
b1010 '
b1011 %
b1011 (
0#
#80
13
b11110 4
1,
b110 !
b110 )
0/
b1001 0
b1000 &
1#
#90
1;
b11110 <
1*
03
b10010 4
0,
b11110 8
15
16
b1101 !
b1101 )
1/
b1 0
b1001 &
b1110 $
b1110 '
b1111 %
b1111 (
0#
#100
13
b11110 4
1,
b1110 !
b1110 )
0/
b1001 0
b1010 &
1#
#200
